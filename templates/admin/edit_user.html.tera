{% extends "logged_in_base" %}
{% block title %}{{ header }}{% endblock title %}
{% block head %}
  <style>
    #main {
        margin-top: 2em;
    }
    .padding {
      padding: 1em;
    }
  </style>
{% endblock head %}
{% block content %}
  {{ super() }}
  <v-container>
    <v-layout wrap>
      <v-flex lg12>
        <v-card id="main">
          <v-alert :value="success_alert" type="success">User updated. <a style="color: white" href="/admin/users">Go back to all users.</a></v-alert>
          <v-alert :value="error_alert" type="error">Update failed.</v-alert>
          <div class="padding">
            <h1 style="text-align: center">Edit User</h1>
            <v-form>
              <v-text-field v-model="email" label="Email" :rules="emailRules" required></v-text-field>
              <v-select :items="groups" label="Groups" v-model="groups_select" multiple required></v-select>
              <v-checkbox v-model="password" label="Force Password Change Email"></v-checkbox>
              <v-checkbox v-model="resend_email" label="Resend Confirmation Email"></v-checkbox>
              <v-checkbox v-model="free" label="Free Membership"></v-checkbox>
              <v-checkbox v-model="deactivated" label="Deactivated"></v-checkbox>
              <v-layout wrap row>
                <v-flex xs4>
                  <v-btn large block color="error" href="/admin/users">Cancel</v-btn>
                </v-flex>
                <v-flex xs7 offset-xs1>
                  <v-btn large block color="success" @click="save" :loading="loading">Save</v-btn>
                </v-flex>
              </v-layout>
            </v-form>
          </div>
        </v-card>
       </v-flex>
    </v-layout>
  </v-container>
{% endblock content %}
{% block script %}
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    new Vue({
      el: '#app',
      delimiters: ["${","}"],
      data: {
        success_alert: false,
        error_alert: false,
        loading: false,
        emailRules: [
          v => !!v || 'E-mail is required',
          v => /^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/.test(v) || 'E-mail must be valid'
        ],
        email: '{{ user_data.email }}',
        groups: [
        {% for group in groups %}
          { text: '{{ group.name }}', value: '{{ group.uuid }}' },
        {% endfor %}
        ],
        groups_select: [
        {% for group in user_data.groups %}
          '{{ group }}',
        {% endfor %}
        ],
        password: {{ user_data.force_change_password }},
        resend_email: {{ user_data.force_resend_email }},
        free: {{ user_data.free_membership }},
        deactivated: {{ user_data.deactivated }}
      },
      methods: {
        save() {
          this.success_alert = this.error_alert = false;
          this.loading = true;
          axios.post('/admin/users/edit/{{ uuid }}', {
              email: this.email,
              force_change_password: this.password,
              force_resend_email: this.resend_email,
              free_membership: this.free,
              deactivated: this.deactivated,
              groups: this.groups_select,
            })
            .then(response => {
              this.loading = false;
              this.success_alert = true;
            })
            .catch(error => {
              this.loading = false;
              this.error_alert = true;
            });
          }
      }
    })
  </script>
{% endblock script %}